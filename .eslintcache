[{"/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/index.js":"1","/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/Cleanup.jsx":"2","/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/Pic.jsx":"3","/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/InfiniteLoop.jsx":"4","/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/FetchData.jsx":"5","/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/App.jsx":"6","/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/index.js":"7","/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/components/FetchData.jsx":"8","/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/components/Pic.jsx":"9","/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/components/InfiniteLoop.jsx":"10","/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/components/Cleanup.jsx":"11"},{"size":165,"mtime":1609066089533,"results":"12","hashOfConfig":"13"},{"size":492,"mtime":1610575245926,"results":"14","hashOfConfig":"15"},{"size":676,"mtime":1634664542627,"results":"16","hashOfConfig":"13"},{"size":2367,"mtime":1634663270444,"results":"17","hashOfConfig":"13"},{"size":2169,"mtime":1634663938198,"results":"18","hashOfConfig":"13"},{"size":344,"mtime":1634663943398,"results":"19","hashOfConfig":"13"},{"size":165,"mtime":1609066089533,"results":"20","hashOfConfig":"21"},{"size":2190,"mtime":1634733882408,"results":"22","hashOfConfig":"21"},{"size":670,"mtime":1634734474726,"results":"23","hashOfConfig":"21"},{"size":2365,"mtime":1634733124254,"results":"24","hashOfConfig":"21"},{"size":492,"mtime":1610575245926,"results":"25","hashOfConfig":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aohimw",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e9pzh1",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"114xf51",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/index.js",[],"/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/Cleanup.jsx",[],"/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/Pic.jsx",["49"],"/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/InfiniteLoop.jsx",["50"],"import React, { useState, useEffect } from 'react';\n\nconst InfiniteLoop = () => {\n  const [data, setData] = useState(null);\n  const [count, setCount] = useState(0);\n\n  //componentDidMount     = Only run the side effect once.\n  //componentDidUpdate    = Will run every time a condition updates.\n  //componentWillUnmount  = Will run when the component un-mounts.\n\n  //-------------------------------------------------------------------------------------------------\n  //We can get into a situation whereby we crash react because of too many renders\n  //For example....\n\n  // fetch('https://jsonplaceholder.typicode.com/posts')\n  //   .then((response) => response.json())\n  //   .then((data) => setData(data));\n\n  // console.log('rendered');\n  //----------------------------------------------------------------------------------------------------\n\n  //----------------------------------------------------------------------------------------------------\n  //The same would happen if we used this useEffect without a dependency array\n  // useEffect(() => {\n  //   fetch('https://jsonplaceholder.typicode.com/posts')\n  //     .then((response) => response.json())\n  //     .then((data) => setData(data));\n  // });\n  // console.log('rendered');\n  //-----------------------------------------------------------------------------------------------------\n\n  //------------------------------------------------------------------------------------------------------\n  //Specifying an empty dependency array ensures that the code inside the useEffect will only run once.\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts')\n      .then((response) => response.json())\n      .then((data) => setData(data));\n  }, []);\n  console.log('rendered');\n  //-------------------------------------------------------------------------------------------------------\n\n  //Be careful with setting values in a dependency array. In this case we will again get into an infinite loop\n  //Why?\n  //Because we are setting state within our useEffect. We are also telling the useEffect to run\n  //every time the state variable data changes.\n  //As a state change causes a re-render.\n  useEffect(() => {\n    setCount((previousCount) => previousCount + 1);\n  }, [count]);\n\n  console.log('rendered');\n\n  return <div>{/* <h1>Count = {count}</h1> */}</div>;\n};\n\nexport default InfiniteLoop;\n","/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/FetchData.jsx",["51"],"/home/dci-l128/DCI_Lessons/FBW36/REACT_Lessons/10-useEffect/01-useeffect/src/components/App.jsx",["52","53"],"/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/index.js",[],"/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/components/FetchData.jsx",[],"/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/components/Pic.jsx",[],"/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/components/InfiniteLoop.jsx",["54","55","56","57","58"],"/home/dci-l128/DCI_Lessons/FBW-E04-1/01-useeffect/src/components/Cleanup.jsx",[],{"ruleId":"59","severity":1,"message":"60","line":6,"column":9,"nodeType":"61","messageId":"62","endLine":6,"endColumn":17},{"ruleId":"59","severity":1,"message":"63","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"63","line":9,"column":10,"nodeType":"61","messageId":"62","endLine":9,"endColumn":14},{"ruleId":"59","severity":1,"message":"64","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":20},{"ruleId":"59","severity":1,"message":"65","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"59","severity":1,"message":"66","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"63","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":14},{"ruleId":"59","severity":1,"message":"67","line":4,"column":16,"nodeType":"61","messageId":"62","endLine":4,"endColumn":23},{"ruleId":"59","severity":1,"message":"68","line":5,"column":10,"nodeType":"61","messageId":"62","endLine":5,"endColumn":15},{"ruleId":"59","severity":1,"message":"69","line":5,"column":17,"nodeType":"61","messageId":"62","endLine":5,"endColumn":25},"no-unused-vars","'interval' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'InfiniteLoop' is defined but never used.","'FetchData' is defined but never used.","'useEffect' is defined but never used.","'setData' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used."]